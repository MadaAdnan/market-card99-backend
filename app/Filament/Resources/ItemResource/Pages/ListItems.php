<?php

namespace App\Filament\Resources\ItemResource\Pages;

use App\Enums\ProductNeedEnum;
use App\Enums\ProductTypeEnum;
use App\Filament\Resources\ItemResource;
use App\Models\Code;
use App\Models\Item;
use App\Models\Product;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\Toggle;
use Filament\Notifications\Notification;
use Filament\Pages\Actions;
use Filament\Resources\Pages\ListRecords;
use Illuminate\Database\Eloquent\Builder;
use Konnco\FilamentImport\Actions\ImportAction;
use Konnco\FilamentImport\Actions\ImportField;

class ListItems extends ListRecords
{
    protected static string $resource = ItemResource::class;
protected function getTableQuery(): Builder
{
    return parent::getTableQuery()->active(); // TODO: Change the autogenerated stub
}

    protected function getActions(): array
    {
        return [
            Actions\CreateAction::make(),
            ImportAction::make()
                ->fields([
                    Select::make('product_id')
                        ->label('المنتج')->preload()
                        ->options(Product::where('type',ProductTypeEnum::DEFAULT->value)->pluck('name','id'))->searchable()
                        ->required()
                        ->helperText('حدد المنتج المراد إضافة أكواد له'),
                    ImportField::make('code')
                        ->label('حقل الكود')->required(),
                    Toggle::make('active')->default(true)->label('حالة الكود')

                ]),
              Actions\Action::make('create-code')->form([
                  Textarea::make('codes')->label('الأكواد')->hint('كل كود في سطر'),
                  Select::make('product_id')->options(Product::where('type',ProductTypeEnum::DEFAULT->value)->pluck('name','id'))->required(),
              ])->action(function($data){
                  $lines = explode("\n", $data['codes']);

                  // إزالة الفراغات البيضاء في بداية ونهاية كل سطر
                  $lines = array_map('trim', $lines);

                  foreach ($lines as $line) {
                      if(empty(trim($line))){
                          continue;
                      }
                      try{
                          Item::create([
                              'product_id'=>$data['product_id'],
                              'code'=>$line,
                              'active'=>true,
                          ]);
                      }catch (\Exception |\Error $e){

                      }


                  }
                  Notification::make('success')->title('نجاح')->body('تم إضافة '.count($lines).'  كود')->success()->send();
              })->label('إضافة أكواد'),
        ];
    }
}
