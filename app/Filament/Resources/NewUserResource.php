<?php

namespace App\Filament\Resources;

use App\Filament\Resources\NewUserResource\Pages;
use App\Filament\Resources\NewUserResource\RelationManagers;
use App\Models\NewUser;
use App\Models\User;
use Filament\Forms;
use Filament\Resources\Form;
use Filament\Resources\Resource;
use Filament\Resources\Table;
use Filament\Tables;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class NewUserResource extends Resource
{
    protected static ?string $model = User::class;

    protected static ?string $navigationIcon = 'heroicon-o-collection';
    protected static ?string $slug = 'news_users';
    protected static ?string $label = 'المستخدمين الجدد';
    protected static ?string $navigationLabel = 'المستخدمين الجدد';
    protected static ?string $pluralLabel = 'المستخدمين الجدد';
    protected static ?string $navigationGroup = 'أساسي';
    protected static ?int $navigationSort = 2;

    /**
     * @return bool
     */


    protected static function shouldRegisterNavigation(): bool
    {
        return auth()->user()->hasRole('super_admin'); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                //
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name')->label('الاسم'),
                Tables\Columns\TextColumn::make('username')->label('اسم المستخدم')->searchable(),
                Tables\Columns\TextColumn::make('email')->label('البريد الإلكتروني')->searchable(),
                Tables\Columns\TextColumn::make('created_at')->since()->label('أضيف منذ')->sortable(),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\DeleteAction::make(),
                Tables\Actions\Action::make('edit')->url(fn($record)=>UserResource::getUrl('edit',['record'=>$record])),
            ])
            ->bulkActions([
                Tables\Actions\DeleteBulkAction::make(),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListNewUsers::route('/'),
//            'create' => Pages\CreateNewUser::route('/create'),
//            'edit' => Pages\EditNewUser::route('/{record}/edit'),
        ];
    }
}
